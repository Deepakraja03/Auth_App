{"ast":null,"code":"import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport userReducer from './user/userSlice';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst rootReducer = combineReducers({\n  user: userReducer\n});\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: {\n    user: userReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  })\n});","map":{"version":3,"names":["combineReducers","configureStore","userReducer","persistReducer","storage","rootReducer","user","persistConfig","key","version","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck"],"sources":["E:/Auth_App/auth-app/src/redux/store.js"],"sourcesContent":["import {combineReducers, configureStore} from '@reduxjs/toolkit';\r\nimport userReducer from './user/userSlice';\r\nimport {persistReducer} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\n\r\nconst rootReducer = combineReducers({user: userReducer})\r\n\r\nconst persistConfig = {\r\n    key: \"root\",\r\n    version: 1,\r\n    storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        user: userReducer\r\n    },\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware({\r\n        serializableCheck: false,\r\n    }),\r\n});"],"mappings":"AAAA,SAAQA,eAAe,EAAEC,cAAc,QAAO,kBAAkB;AAChE,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,SAAQC,cAAc,QAAO,eAAe;AAC5C,OAAOC,OAAO,MAAM,2BAA2B;AAG/C,MAAMC,WAAW,GAAGL,eAAe,CAAC;EAACM,IAAI,EAAEJ;AAAW,CAAC,CAAC;AAExD,MAAMK,aAAa,GAAG;EAClBC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAE,CAAC;EACVL;AACJ,CAAC;AAED,MAAMM,gBAAgB,GAAGP,cAAc,CAACI,aAAa,EAAEF,WAAW,CAAC;AAEnE,OAAO,MAAMM,KAAK,GAAGV,cAAc,CAAC;EAChCW,OAAO,EAAE;IACLN,IAAI,EAAEJ;EACV,CAAC;EACDW,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,CAAC;IACvDC,iBAAiB,EAAE;EACvB,CAAC;AACL,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}