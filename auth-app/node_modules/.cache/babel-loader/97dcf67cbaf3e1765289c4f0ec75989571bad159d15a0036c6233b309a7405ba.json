{"ast":null,"code":"import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport userReducer from './user/userSlice';\nimport { persistReducer } from 'redux-persist';\nconst rootReducer = combineReducers({\n  user: userReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: {\n    user: userReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  })\n});","map":{"version":3,"names":["combineReducers","configureStore","userReducer","persistReducer","rootReducer","user","persistedReducer","persistConfig","store","reducer","middleware","getDefaultMiddleware","serializableCheck"],"sources":["E:/Auth_App/auth-app/src/redux/store.js"],"sourcesContent":["import {combineReducers, configureStore} from '@reduxjs/toolkit';\r\nimport userReducer from './user/userSlice';\r\nimport {persistReducer} from 'redux-persist';\r\n\r\n\r\nconst rootReducer = combineReducers({user: userReducer})\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        user: userReducer\r\n    },\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware({\r\n        serializableCheck: false,\r\n    }),\r\n});"],"mappings":"AAAA,SAAQA,eAAe,EAAEC,cAAc,QAAO,kBAAkB;AAChE,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,SAAQC,cAAc,QAAO,eAAe;AAG5C,MAAMC,WAAW,GAAGJ,eAAe,CAAC;EAACK,IAAI,EAAEH;AAAW,CAAC,CAAC;AAExD,MAAMI,gBAAgB,GAAGH,cAAc,CAACI,aAAa,EAAEH,WAAW,CAAC;AAEnE,OAAO,MAAMI,KAAK,GAAGP,cAAc,CAAC;EAChCQ,OAAO,EAAE;IACLJ,IAAI,EAAEH;EACV,CAAC;EACDQ,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,CAAC;IACvDC,iBAAiB,EAAE;EACvB,CAAC;AACL,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}